name: Rust CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  cov:
    name: coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Update apt repositories
        run: apt update -y
      - name: Install apt packages
        run: |
            apt install -y ocl-icd-opencl-dev
            apt-get install -y libhwloc-dev
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --exclude tests/* --timeout 120 --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
  coverme:
    name: COV-2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Update apt repositories
        run: sudo apt update
      - name: Install apt packages
        run: |
            sudo apt install -y ocl-icd-opencl-dev 
            sudo apt-get install -y libhwloc-dev clang llvm libclang-dev
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy     
      - name: Execute tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Cpanic=abort'
      - uses: actions-rs/grcov@v0.1
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
            github-token: ${{ secrets.GIT_TOKEN }}
            path-to-lcov: ${{ steps.coverage.outputs.report }}
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Update apt repositories
        run: sudo apt update

      - name: Install apt packages
        run: |
            sudo apt install ocl-icd-opencl-dev
            sudo apt-get install -y libhwloc-dev

      # TODO enable when protoc needed again
      # - name: Install Protoc
      #   uses: arduino/setup-protoc@master
      #   with:
      #     version: "3.9.1"

      - name: Toolchain setup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Pull submodules
        run: git submodule update --init

      - name: Run all unit tests
        run: make test

      - name: Run test vectors
        run: make run-vectors

  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Toolchain setup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - run: rustup component add rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Check license headers
        run: make license

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Update apt repositories
        run: sudo apt update

      - name: Install OpenCL
        run: sudo apt install ocl-icd-opencl-dev

      # - name: Install Protoc
      #   uses: arduino/setup-protoc@master
      #   with:
      #     version: "3.9.1"

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Check forest binary
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: -p forest

  # publish_docs:
  #   if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
  #   name: Publish Documentation
  #   needs: [clippy, test]
  #   runs-on: ubuntu-16.04
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: "recursive"

  #     - name: Install Rust
  #       run: rustup update beta && rustup default beta

  #     - name: Update apt repositories
  #       run: sudo apt update

  #     - name: Install OpenCL
  #       run: sudo apt install ocl-icd-opencl-dev

  #     # - name: Install Protoc
  #     #   uses: arduino/setup-protoc@master
  #     #   with:
  #     #     version: "3.9.1"

  #     - name: Build documentation
  #       run: cargo doc --no-deps --all-features
  #     - name: Publish documentation
  #       run: |
  #         cd target/doc
  #         git init
  #         echo '<meta http-equiv="refresh" content="0; url=https://chainsafe.github.io/forest/forest_vm/index.html">' > index.html
  #         git add .
  #         git -c user.name='ci' -c user.email='ci' commit -m 'Deploy documentation'
  #         git push -f -q https://git:${{ secrets.github_token }}@github.com/${{ github.repository }} HEAD:gh-pages
